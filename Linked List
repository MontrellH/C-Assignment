/*
** Montrell Harrington
** COP3530
** 
*/

#include <iostream>
#include <cstdio>
#include <stdlib.h>

using namespace std;

struct Node {
    int d;       
    Node *n;     
};

void initilNode(struct Node *head, int n) {
    head->d = n;
    head->n = NULL;
}

void addNode(struct Node *head, int n) {
	Node *newNode = new Node;
	newNode->d = n;
	newNode->n = NULL;

	Node *current = head;
	while (current) {
		if (current->n == NULL) {
			current->n = newNode;
			return;
		}
		current = current->n;
	}
}

void displaylist(struct Node *head) {
	Node *ll = head;
	while (ll) {
		cout << ll->d << " ";
		ll = ll->n;
	}
	cout << endl;
	cout << endl;
}

int main() {
    struct Node *head = new Node;
    int Nelements, elements, lists, steps; 

    cin >> Nelements;

    for (int i = 0; i < Nelements; i++) {
        
		cin >> elements;		   
		if(i==0) {
			initilNode(head, elements);  
		}
			else{
				addNode(head, elements);
			
		}
	}

        cin >> lists;		 

        for (int i = 0; i < lists; i++) {

            cin >> steps;		 
            cin >> Nelements;	
				
				Node *temp2;                         
                temp2 = head;

            for (int i = 0; i < Nelements; i++) {
                cin >> elements;  

                for (int i = 1; i < steps; i++) {
                    temp2 = temp2->n; 
                }
               
					Node *temp1= new Node;				  
					temp1->d = elements;                
					temp1->n = temp2->n;             
					temp2->n = temp1;					  
					temp2 = temp2->n->n;
            }
        }
		displaylist(head);

        return 0;
    }


